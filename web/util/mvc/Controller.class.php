<?php

	/**
	 * @file
	 * @brief Controller class
	 */

	namespace util\mvc;

	use util\superglobals\SG_Get as SG_Get;
	use util\superglobals\SG_Post as SG_Post;
	use util\superglobals\SG_Files as SG_Files;
	use util\superglobals\SG_Cookies as SG_Cookies;
	use util\superglobals\SG_Session as SG_Session;

	use ct\Connection as Connection;

	use \Smarty;

	/**
	 * @class Controller 
	 * @brief Superclass of any controller class
	 */
	abstract class Controller
	{
		protected $sg_get; /**< Superglobal object for $_GET */
		protected $sg_post; /**< Superglobal object for $_POST */
		protected $sg_files; /**< Superglobal object for $_FILES */
		protected $sg_cookies; /**< Superglobal object for $_COOKIES */
		protected $sg_session; /**< Superglobal object for $_SESSION */

		protected $smarty; /**< Smarty object */

		protected $connection; /**< Connection object */

		/**
		 * @brief Construct the Controller object
		 */
		public function __construct()
		{
			$this->sg_get = new SG_Get();
			$this->sg_post = new SG_Post();
			$this->sg_files = new SG_Files();
			$this->sg_cookies = new SG_Cookies();
			$this->sg_session = new SG_Session();	

			$this->smarty = new Smarty();
			$this->smarty->setTemplateDir("views/tpl");
			$this->smarty->setCompileDir("views/compiled");

			$this->connection = Connection::get_instance();
		}

		/**
		 * @brief Returns the output generated by the controller as a string so that it can be sent through http(s)
		 * @retval string The output generated by the controller
		 */
		abstract public function get_output();
	}